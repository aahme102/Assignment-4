help()
2+2
13343 / 343
235*900
2+
# R can add numbers
3+5
## I can also do multiplications
3*5
## Note: leave a space before and after a mathematical symbol
64 / 8
install.packages("tidyverse")
library(tidyverse)
#Packages
#install.packages("tidyvere")
library("tidyverse")
activity
activity <- c("Read a novel",
"Nap",
"Do research",
"Prep for class",
"Travel",
"See friends",
"Visit family",
"Biking")
activity
time_expectations <- c(10, # 10% of my time reading a novel
5, # Nap
25, # Do research
10, # Prep for class
15, # Travel
20, # Hanging out with friends
10, # See family
5) # Biking
time_expectations
time_reality <- c(0, # 0% of my time reading a novel
10, # Nap
20, # Do research
10, # Prep for class
20, # Travel
15, # Hanging out with friends
25, # See family
0) # Biking
summer <-
data.frame(activity = activity,
time_expectations = time_expectations,
time_reality = time_reality)
head(summer, 5)
summer =
pivot_longer(summer,
cols = c("time_expectations", "time_reality"),
names_to = "time",
values_to = "percentage_time")
head(summer, 6)
final_plot =
summer %>%
ggplot() +
geom_bar(mapping = aes(x = activity,
y = percentage_time,
fill = time),
position = "dodge",
stat = "identity") +
scale_fill_manual(values = c("#e76f51", "#e9c46a")) +
labs(title = "My summer",
subtitle = "How I spent my time",
x = "Percentage time",
y = "Activity",
fill = "Expectation vs Reality") +
theme_classic() +
theme(
plot.title = element_text(face = "bold", size = 35),
plot.subtitle = element_text(face = "italic", size = 25),
axis.title = element_text(face = "bold", size = 15),
axis.text = element_text(size = 15),
legend.title = element_text(face = "bold", size = 15),
legend.text = element_text(size = 15)
final_plot
final_plot
final_plot
final_plot =
summer %>%
ggplot() +
geom_bar(mapping = aes(x = activity,
y = percentage_time,
fill = time),
position = "dodge",
stat = "identity") +
scale_fill_manual(values = c("#e76f51", "#e9c46a")) +
labs(title = "My summer",
subtitle = "How I spent my time",
x = "Percentage time",
y = "Activity",
fill = "Expectation vs Reality") +
theme_classic() +
theme(
plot.title = element_text(face = "bold", size = 35),
plot.subtitle = element_text(face = "italic", size = 25),
axis.title = element_text(face = "bold", size = 15),
axis.text = element_text(size = 15),
legend.title = element_text(face = "bold", size = 15),
legend.text = element_text(size = 15)
final_plot
# Packages
#Package
#Packages
#install.packages("tidyverse")
library("tidyverse")
activity <- c("Read a novel",
"Nap",
"Do research",
"Prep for class",
"Travel",
"See friends",
"Visit family",
"Biking")
activity
time_expectations <- c(10, # 10% of my time reading a novel
5, # Nap
25, # Do research
10, # Prep for class
15, # Travel
20, # Hanging out with friends
10, # See family
5) # Biking
time_expectations
time_reality <- c(0, # 0% of my time reading a novel
10, # Nap
20, # Do research
10, # Prep for class
20, # Travel
15, # Hanging out with friends
25, # See family
0) # Biking
summer <-
data.frame(activity = activity,
time_expectations = time_expectations,
time_reality = time_reality)
head(summer, 5)
summer =
pivot_longer(summer,
cols = c("time_expectations", "time_reality"),
names_to = "time",
values_to = "percentage_time")
head(summer, 6)
final_plot =
summer %>%
ggplot() +
geom_bar(mapping = aes(x = activity,
y = percentage_time,
fill = time),
position = "dodge",
stat = "identity") +
scale_fill_manual(values = c("#e76f51", "#e9c46a")) +
labs(title = "My summer",
subtitle = "How I spent my time",
x = "Percentage time",
y = "Activity",
fill = "Expectation vs Reality") +
theme_classic() +
theme(
plot.title = element_text(face = "bold", size = 35),
plot.subtitle = element_text(face = "italic", size = 25),
axis.title = element_text(face = "bold", size = 15),
axis.text = element_text(size = 15),
legend.title = element_text(face = "bold", size = 15),
legend.text = element_text(size = 15)
final_plot
object1<- 2
object2<- 3
2+3
object1 + object2
OB1 <- c(1,2,3,4,5)
object1 <- 2
object2<- 3
2+3
object1 + object2
OB1 <- c(1,2,3,4,5)
object1<- 2
object1<- 2
object2<- 3
2+3
object1 + object2
OB1 <- c(1,2,3,4,5)
object1<- 2
object2<- 3
2+3
object1 + object2
OB1 <- c(1,2,3,5)
ob1<-c
View(ob1)
OB1 <- c(1,2,3,5)
Ob1 <- c(1,2,3,5)
myself_cook <- c(3, 2, 1.5, 0, 2, 1, 0.5)
myself_cook
partner_cook <- c(2, 2, 2, 2, 1, 0, 0.5)
partner_cook
myself_cook + partner_cook
week_days <- c("monday",
"tuesday",
"wednesday",
"thursday",
"friday",
"saturday",
"sunday")
week_days
class(week_days)
names <- c ("Mary", "Mark", "John", "David", "Claudia")
yob <- c (1990, 1987, 1980, 1985, 1993)
class(names)
class(yob)
cbind(names, yob)
rbind(names, yob)
data_1 <- cbind(names, yob)
view (data_1)
view(data_1)
data_1
nrow(data_1)
ncol(data_1)
dim(data_1)
data_1[2,2]
data_1[5, 1]
data_1[,1]
data_1[, 2]
data_1_subset = data_1[, 2]
class(data_1_subset)
library(tidyverse)
data_tb <- tibble(names = names,
yob = yob)
view (data_tb)
data_tb
data_df <- data.frame(names = names,
yob = yob)
data_df
view (data_df)
data_df
data_tb
class(airquality)
airquality
airquality_tb = as_tibble(airquality)
airquality_tb
names <- c("Mary", "Mark", "John", "David", "Claudia")
yob <- c(1999, 1985, 1960, 1955, 1974)
data_tb <-tibble(names = names,
yob = yob)
data_tb$names
data_tb$yob
class(data_tb$names)
class(data_tb$yob)
data_tb$age <- 2024 - data_tb$yob
data_tb_agemonths <- data_tb$age * 12
data_tb$agemonths <- data_tb$age * 12
view (data_tb)
table(data_tb$age)
mean(data_tb$age)
min(data_tb$age)
max(data_tb$age)
sd(data_tb$age)
median(data_tb$age)
quantile(data_tb$age)
table(data_tb)
data_tb[data_tb$yob < 1980, ]
mean(data_tb$age[data_tb$yob < 1980])
mean(data_tb$age[data_tb$names == "Mary"])
write_csv(data_tb, "Data_Class2.csv")
getwd()
knitr::opts_chunk$set(message = FALSE, warning = FALSE, eval=TRUE, echo=TRUE)
install.packages("randomNames")
library(randomNames)
library(tibble)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, eval=TRUE, echo=TRUE)
set.seed(434)
days_unemployed <- sample(0:255, size = 40, replace = T)
days_unemployed
set.seed(434)
job_applications <- sample(1:25, size = 40, replace = T)
job_applications
set.seed(434)
job_training <- sample(c(0,1), size = 40, replace = T)
job_training
install.packages("randomNames")
library(randomNames)
set.seed(434)
random_names <- randomNames(40)
random_names
library(tibble)
knitr::opts_chunk$set(echo = TRUE)
library(stevedata)
data = pwt_sample
dim(data)
head(data, 5)
data2017 =
data %>%
filter(year == 2017) %>%
select(-c(country, isocode, year))
library(dplyr)
library(dplyr)
data2017 =
data %>%
filter(year == 2017) %>%
select(-c(country, isocode, year))
median(data2017$pop)
map(data2017, class)
library(tidyverse)
map(data2017, class)
map(data2017, median)
map_dbl(data2017, median)
map_dfr(data2017, median)
map_lgl(data2017, is.numeric)
map_lgl(data, is.numeric)
map_dbl(data2017, quantile)
map_dbl(data2017, quantile, 0.75)
map_dbl(data2017, ~ quantile(., 0.75) - quantile(., 0.25))
map_dbl(data, ~length(unique(.)))
data %>%
select(country, isocode, year) %>%
map_dbl(~length(unique(.)))
map_dbl(data[,1:3], ~length(unique(.)))
map_dfr(data2017, ~ c(mean(.), median(.)))
map(data, class)
map_dbl(pwt_sample, ~ sum(is.na(.)))
map_dbl(pwt_sample, ~ if(is.numeric(.)) round(mean(., na.rm = TRUE), 2)
f
map_dbl(pwt_sample, ~ if(is.numeric(.)) round(mean(., na.rm = TRUE), 2) else NA)
data >%>
library(dplyr)
data >%>
View(data)
data >%>
x = data >%>
library(dplyr)
data >%>
data >%>
View(data)
map_dbl(data, ~ round(mean(., na.rm = TRUE), 2)
f\
data %>%
select(rgdpna, rgdpo) %>%
mutate(min = map2_dbl(rgdpna, rgdpo, min))
data %>%
select(rgdpna, rgdpo, rgdpe) %>%
mutate(min = pmap_dbl(., min))
modify(data2017, round, 1)
data %>%
group_by(country) %>%
summarize(across(c(pop, hc, rgdpna, labsh), median))
data %>%
group_by(country) %>%
summarize(across(pop:rnna, ~ median(.)))
data %>%
group_by(country) %>%
summarize(across(where(is.numeric), ~ median(.x)))
data %>%
group_by(country) %>%
summarize(across(where(is.numeric), ~ median(.x, na.rm = T)))
data %>%
group_by(country) %>%
summarize(across(everything(), ~median(.x)))
data %>%
summarise(across(everything(), ~ if (is.numeric(.)) round(mean(., na.rm = TRUE), 2) else n_distinct(.)))
data %>%
summarise(across(everything(), ~ sum(is.na(.))))
data %>%
summarise(across(where(is.numeric), list(mean = ~ round(mean(., na.rm = TRUE), 2),
sd = ~ round(sd(., na.rm = TRUE), 2))))
output <- vector("double", 9)
sequence{
for (i in 1:9)
output[[1]] <- median(data2017[[1]], na.rm = T)
for (i in 1:ncol(data2017)){
output[[i]] <- mean(data2017[[i]], na.rm = T)
}
data_R = data
for (i in 1:ncol(data_R)){
data_R[[i]] <- round(data_R[[i]], 1)
}
for (i in 4:ncol(data_R)){
data_R[[i]] <- round(data_R[[i]], 1)
}
# Load the ggplot2 library
library(ggplot2)
# Define price range for avocados
price <- seq(0, 4, by = 0.1)  # Prices from $0 to $4
# Calculate quantity demanded for two income levels
quantity_Y_4000 <- 160 - 40 * price  # Demand when income = $4000
quantity_Y_5000 <- 170 - 40 * price  # Demand when income = $5000
# Combine data into a data frame
data <- data.frame(
Price = rep(price, 2),
Quantity = c(quantity_Y_4000, quantity_Y_5000),
Income = rep(c("$4000", "$5000"), each = length(price))
)
# Plot the demand curves
ggplot(data, aes(x = Price, y = Quantity, color = Income)) +
geom_line(size = 1) +
labs(
title = "Shift in Demand Curve for Avocados as Income Increases",
x = "Price of Avocados ($)",
y = "Quantity Demanded (Q)",
color = "Per Capita Income"
) +
theme_minimal() +
annotate(
"text", x = 2, y = 130,
label = "Demand shifts outward\nwith higher income",
color = "black", size = 4, hjust = 0
)
# Load the ggplot2 library
library(ggplot2)
# Define price range for avocados
price <- seq(0, 4, by = 0.1)  # Prices from $0 to $4
# Calculate quantity demanded for two income levels
quantity_Y_4000 <- 160 - 40 * price  # Demand when income = $4000
quantity_Y_5000 <- 170 - 40 * price  # Demand when income = $5000
# Combine data into a data frame
data <- data.frame(
Price = rep(price, 2),
Quantity = c(quantity_Y_4000, quantity_Y_5000),
Income = rep(c("$4000", "$5000"), each = length(price))
)
# Plot the demand curves with Quantity on x-axis and Price on y-axis
ggplot(data, aes(x = Quantity, y = Price, color = Income)) +
geom_line(size = 1) +
labs(
title = "Shift in Demand Curve for Avocados as Income Increases",
x = "Quantity Demanded (Q)",
y = "Price of Avocados ($)",
color = "Per Capita Income"
) +
theme_minimal() +
annotate(
"text", x = 140, y = 2.5,
label = "Demand shifts outward\nwith higher income",
color = "black", size = 4, hjust = 0
)
# Load the ggplot2 library
library(ggplot2)
# Define price range for avocados
price <- seq(0, 4, by = 0.1)  # Prices from $0 to $4
# Calculate quantity demanded for two income levels
quantity_Y_4000 <- 160 - 40 * price  # Demand when income = $4000
quantity_Y_5000 <- 170 - 40 * price  # Demand when income = $5000
# Combine data into a data frame
data <- data.frame(
Price = rep(price, 2),
Quantity = c(quantity_Y_4000, quantity_Y_5000),
Income = rep(c("$4000", "$5000"), each = length(price))
)
# Plot the demand curves with Quantity on x-axis and Price on y-axis
ggplot(data, aes(x = Quantity, y = Price, color = Income)) +
geom_line(size = 1) +
labs(
title = "Shift in Demand Curve for Avocados as Income Increases",
x = "Quantity Demanded (Q)",
y = "Price of Avocados ($)",
color = "Per Capita Income"
) +
theme_minimal() +
annotate(
"text", x = 140, y = 2.5,
label = "Demand shifts outward\nwith higher income",
color = "black", size = 4, hjust = 0
)
setwd("C:/Users/fren/Desktop/Assignments for AI & Machine Learning/Assignment-4")
library(readxl)
Dataset <- read_excel("Dataset.xlsx")
View(Dataset)
library(readxl)
Dataset <- read_excel("Dataset.xlsx")
View(Dataset)
View(Dataset)
country_data = read.csv("Dataset")
country_data <- read.csv("Dataset.csv")
library(readxl)
Dataset <- read_excel("Dataset.xlsx")
View(Dataset)
country_data <- read.csv("Dataset.csv")
country_data <- read.csv("Dataset.csv")
